<?xml version="1.0"?>
<launch>
  <!-- <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="open_rviz" default="true"/>
  <arg name="move_forward_only" default="false"/>

  <include file="$(find e2box_imu)/launch/e2box_imu.launch"/>

  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_robot.launch"/>
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <include file="$(find ntrip_ros)/launch/ntrip_ros.launch"/>
  <include file="$(find ublox_gps)/launch/ublox_device.launch"/>

  <include file="$(find realsense2_camera)/launch/rs_rgbd.launch">
    <arg name="align_depth" value="true"/>
    <arg name="depth_width" value="424"/>
    <arg name="depth_height" value="240"/>
    <arg name="depth_fps" value="30"/>
    <arg name="color_width" value="424"/>
    <arg name="color_height" value="240"/>
    <arg name="color_fps" value="30"/>
  </include> -->
  <!-- <include file="$(find depthimage_to_laserscan)/launch/launchfile_sample.launch"/> -->

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_base_link" args="0 0 0 0 0 0 odom base_link"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_base_footprint" args="0 0 0 0 0 0 odom base_footprint"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" args="0 0 0 0 0 0 base_footprint base_link"/> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_wheel_link" args="0 0 0 0 0 0 base_link wheel_link"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imue2box_link" args="0 0 0 0 0 0 base_link imue2box_link"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_gps_link" args="0 0 0 0 0 0 base_link gps_link"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_camera_link" args="0 0 0 0 0 0 base_link camera_link"/> -->

  <rosparam command="load" file="$(find caddy_bot)/params/ekf_params.yaml" />
  <!-- <rosparam command="load" file="$(find caddy_bot)/params/navsat_params_sim.yaml" /> -->

  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_odom" clear_params="true"/>
<!-- 
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se_map" clear_params="true">
    <remap from="odometry/filtered" to="odometry/filtered_map"/>
  </node>

  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" clear_params="true" output="screen" >
      <remap from="odometry/filtered" to="odometry/filtered_map"/>
      <remap from="gps/fix" to="/ublox/fix"/>
      <remap from="imu/data" to="/imu_e2box"/>
  </node>

  <include file="$(find caddy_bot)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find caddy_bot)/rviz/DD.rviz" /> -->

</launch>
